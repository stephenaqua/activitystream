<?php
// $Id$
require_once 'simplepie.inc';

/*
 * The API passes in a $user object that contains four properties:
 * uid, userid, password, feed. These properties contain the account
 * information entered into the user's settings page, along with the 
 * uid of their Drupal account.
 */
function activitystream_feed_streamapi($user) {
	// No feed URL, skip this one
	if (!$user->feed) {
		return;
	}
	
	$feed = new SimplePie();
	$feed->set_cache_location('/tmp');
	$feed->set_feed_url($user->feed);
	$feed->set_useragent('Drupal Activity Streams');
	$feed->init();
	$arrFeed = $feed->get_items();
	$items = array();
	if (is_array($arrFeed)) {
		foreach($arrFeed as $item) {
			$activity['link'] = $item->get_permalink();
			$activity['title'] = $item->get_title();
	    $activity['body'] = $item->get_description();
	    $activity['timestamp'] = strtotime($item->get_date());
	    $activity['guid'] = md5($item->get_permalink());
			$activity['data'] = serialize(array('favicon' => $feed->get_favicon(), 'feedtitle' => $feed->get_title()));
			$items[] = $activity;
		}
	}
	
	return $items;
}


/*
 * Implement a user settings form hook. Modules should build a form
 * using an array that mirrors the Drupal form API. activitystream.module
 * will add the form elements to a tab called Activity Streams on the
 * user's Profile Edit page. Fields should be named
 * yourmodulename_fieldname. For instance, to store the user ID for 
 * Flickr, the field name is activitystream_flickr_userid
 *
 * To avoid collisions with other activitystream module's forms
 * use your module's name as the form array's key.
 */
function activitystream_feed_activitystream_settings() {
	$form['activitystream_feed'] = array(
      '#type' => 'fieldset',
      '#title' => t('Feed settings'));
  $form['activitystream_feed']['activitystream_feed_feed'] = array(
    '#type' => 'textarea',
    '#title' => t('Feed URL'),
  '#rows' => 15,
    '#default_value' => $edit['activitystream_feed_feed'],
    '#description' => t('URL of the feeds to import as an activity stream. Multiple feeds are allowed; place each on a seperate line.'));
  return $form;	
}

function theme_activitystream_feed_icon($params) {
	$params = unserialize($params);
	// Return the favicon if we have it. Otherwise return a default feed icon.
	if ($params['favicon']) {
		return '<img src="' . $params['favicon'] . '" alt="' . $params['feedtitle'] . '"/>';		
	} 
	else {
		return theme_image(drupal_get_path('module', 'activitystream_feed') . '/feed-icon-16x16.png');
	}
}

function theme_activitystream_feed_item($activity) {
	$node = node_load($activity->nid);
	$date = theme('activitystream_date',$node->created);
	$user = user_load(array('uid' => $node->uid));
	$name = theme('activitystream_username',$user);
	return '<span class="activitystream-item">' . theme('activitystream_feed_icon',$activity->data) . " <span>$name posted " . l($node->title, $activity->link) . " <span class=\"activitystream-created\">$date</span></span>" . l('#', 'node/' . $node->nid, array('class' => 'permalink')) . '</span>'."\n";
}